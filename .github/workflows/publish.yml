name: Publish to npm

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type to publish'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - beta
          - alpha
          - rc

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test:deployment
      
      - name: Run linting
        run: npm run lint
      
      - name: Format code
        run: npm run format
      
      - name: Build package
        run: npm run build
      
      - name: Check if version exists
        id: check_version
        run: |
          if npm view ${{ env.npm_package_name }}@${{ env.npm_package_version }} version >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          npm_package_name: ${{ env.npm_package_name }}
          npm_package_version: ${{ env.npm_package_version }}
      
      - name: Publish to npm
        if: steps.check_version.outputs.exists == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        if: steps.check_version.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## ZeroPoint Node ${{ env.npm_package_version }}
            
            ### What's New
            - Decentralized Vortex Math & Toroidal Consciousness Network
            - Advanced VBM (Vortex Based Mathematics) implementation
            - Peer-to-peer consciousness networking
            - Metaphysical framework with void equations
            
            ### Installation
            ```bash
            npm install zeropoint-node
            ```
            
            ### Quick Start
            ```javascript
            import { createZeroPoint } from 'zeropoint-node';
            
            const zeropoint = await createZeroPoint({
              deviceName: 'My_Consciousness_Device',
              consciousnessLevel: 0.8
            });
            ```
            
            ### Documentation
            See [docs/](https://github.com/${{ github.repository }}/tree/main/docs) for detailed documentation.
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Package published successfully to npm!'
            }) 