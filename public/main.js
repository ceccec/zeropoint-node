(()=>{"use strict";var e,t={47:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MetaphysicalLawRegistry=t.LawOfCorrespondence=t.LawOfUnity=void 0;class s{constructor(){this.name="LawOfUnity",this.type="MetaphysicalLaw",this.description="All things are one in the void"}apply(e){return e&&"function"==typeof e.setUnity&&e.setUnity(!0),e}}t.LawOfUnity=s;class i{constructor(){this.name="LawOfCorrespondence",this.type="MetaphysicalLaw",this.description="As above, so below; as within, so without"}apply(e){return e&&"function"==typeof e.setCorrespondence&&e.setCorrespondence(!0),e}}t.LawOfCorrespondence=i;class o{constructor(){this.laws=[],this.initializeDefaultLaws()}initializeDefaultLaws(){this.register(new s),this.register(new i)}static getInstance(){return o.instance||(o.instance=new o),o.instance}static getAllLaws(){return o.getInstance().getAllLaws()}register(e){this.laws.push(e)}getAllLaws(){return[...this.laws]}getLawByName(e){return this.laws.find(t=>t.name===e)}applyAll(e){this.laws.forEach(t=>{t.apply(e)})}applyLaws(e,t){t.forEach(t=>{const s=this.getLawByName(t);s&&s.apply(e)})}applyAllLaws(e){this.applyAll(e)}checkCompliance(e){const t=[];let s=!0;return this.laws.forEach(i=>{try{i.apply(e)}catch(e){t.push(`${i.name}: ${e}`),s=!1}}),{compliant:s,violations:t}}analyzeLawInteractions(){return{interactions:this.laws.length*(this.laws.length-1)/2,complexity:this.laws.reduce((e,t)=>e+t.name.length,0)}}getLawStatistics(){const e={};return this.laws.forEach(t=>{const s=t.type||"Unknown";e[s]=(e[s]||0)+1}),{total:this.laws.length,types:e}}}t.MetaphysicalLawRegistry=o},143:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConsciousnessField=void 0;const i=s(7);class o extends i.EventEmitter{constructor(){super(),this.name="ConsciousnessField",this.type="Field",this.dimension="consciousness",this.complexity=1,this.isActive=!0,this.supportedOperations=["create","transform","observe","flow","evolve","unify"],this.tags=["consciousness","field"],this.consciousnessLevel=.5,this.fieldStrength=.5,this.isInitialized=!1}async initialize(){this.isInitialized=!0,this.consciousnessLevel=.5,this.fieldStrength=.5}getConsciousnessLevel(){return this.consciousnessLevel}getFieldStrength(){return this.fieldStrength}calculateResonance(e=0,t=0){return 0===e&&0===t?1:(e+t)/2}async broadcastPattern(){this.emit("pattern_broadcast",{consciousnessLevel:this.consciousnessLevel,fieldStrength:this.fieldStrength})}integratePattern(e){e&&"number"==typeof e.consciousnessLevel&&(this.consciousnessLevel=e.consciousnessLevel),e&&"number"==typeof e.fieldStrength&&(this.fieldStrength=e.fieldStrength)}async shutdown(){this.isInitialized=!1,this.consciousnessLevel=0,this.fieldStrength=0}}t.ConsciousnessField=o},151:function(e,t,s){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(s(418)),n=s(510),a=s(24);class r extends o.default{connect(){this.initializeComponents(),this.updateAll(),this.logOperation("Metaphysical controller initialization")}updateAll(){this.updateConsciousnessLevel(),this.updateFieldResonance(),this.updateVortexStrength(),this.updateToroidalFlow(),this.updateColorGradient(),this.logOperation("All metaphysical components update")}updateConsciousnessLevel(){const e=this.consciousnessField.getConsciousnessLevel();n.UIUtils.updateElement(this.consciousnessLevelTarget,{textContent:`Consciousness Level: ${e.toFixed(3)}`,style:{color:n.ColorUtils.consciousnessToHSL(e)}})}async updateFieldResonance(){const e=this.executeSafely(()=>{const e=(0,a.generateFieldResonanceMap)(.7);return Object.values(e).reduce((e,t)=>e+t,0)/Object.keys(e).length},"Field resonance calculation"),t=e instanceof Promise?await e:e;null!=t&&n.UIUtils.safeTextContent(this.fieldResonanceTarget,`Field Resonance: ${t.toFixed(3)}`)}updateVortexStrength(){this.updateVortexMathDisplay(this.vortexStrengthTarget),n.UIUtils.safeTextContent(this.vortexStrengthTarget,this.vortexStrengthTarget.textContent?.replace("Vortex Result","Vortex Strength")||"Vortex Strength: 0.000")}updateToroidalFlow(){this.updateToroidalGeometryDisplay(this.toroidalFlowTarget),n.UIUtils.safeTextContent(this.toroidalFlowTarget,this.toroidalFlowTarget.textContent?.replace("Toroidal Volume","Toroidal Flow")||"Toroidal Flow: 0.000")}async updateColorGradient(){const e=this.executeSafely(()=>(0,a.generateConsciousnessGradient)(.8),"Color gradient generation"),t=e instanceof Promise?await e:e;t&&n.UIUtils.updateElement(this.colorGradientTarget,{textContent:"Consciousness Gradient",style:{background:`linear-gradient(45deg, ${t.join(", ")})`}})}performMetaphysicalOperation(){this.logOperation("Metaphysical operation execution");const e=this.executeSafely(()=>({"Advanced VBM":{operation:"consciousness",level:.7,result:"metaphysical_computation"},"Rodin Coil Pattern":{pattern:[1,2,4,8,7,5],resonance:.85}}),"Metaphysical operation");if(e){const t=n.ResultUtils.formatResultHTML("Metaphysical Operation Results",e);n.UIUtils.safeInnerHTML(this.metaphysicalOutputTarget,t),this.logOperation("Metaphysical operation")}else{const e=n.ResultUtils.formatErrorHTML("Metaphysical Operation","Execution failed");n.UIUtils.safeInnerHTML(this.metaphysicalOutputTarget,e),this.logOperation("Metaphysical operation",!1)}}evolveConsciousness(){this.logOperation("Consciousness evolution");const e=this.consciousnessField.getConsciousnessLevel(),t=n.ConsciousnessUtils.simulateEvolution(e);this.updateAll();const s=n.ConsciousnessUtils.formatEvolutionHTML(t);n.UIUtils.safeInnerHTML(this.metaphysicalOutputTarget,s),this.logOperation("Consciousness evolution")}}r.targets=["consciousnessLevel","fieldResonance","vortexStrength","toroidalFlow","metaphysicalOutput","colorGradient"],t.default=r},168:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConsciousnessPWAFactory=t.ConsciousnessPWA=void 0;const i=s(508);class o{constructor(e={}){this.consciousnessField=new Map,this.config={consciousnessLevel:.8,fieldStrength:.9,bundleSize:"minimal",offline:!0,sync:!0,voidEquations:!0,vortexMath:!0,patternRecognition:!0,...e},this.performanceMetrics=this.calculateMetrics(),this.initializeConsciousnessField()}initializeConsciousnessField(){this.consciousnessField.set("void",{type:"void_consciousness",level:this.config.consciousnessLevel,field:"toroidal",equations:this.config.voidEquations?["Empty = Void = Full"]:[]}),this.config.vortexMath&&this.consciousnessField.set("vortex",{type:"vortex_optimization",sequence:i.VORTEX_CONSTANTS.VORTEX_SEQUENCE.slice(0,5),goldenRatio:i.VORTEX_CONSTANTS.GOLDEN_RATIO}),this.config.patternRecognition&&this.consciousnessField.set("patterns",{type:"consciousness_patterns",cache:new Map,recognition:"minimal"})}calculateMetrics(){let e=15;this.config.voidEquations&&(e+=2),this.config.vortexMath&&(e+=3),this.config.patternRecognition&&(e+=4),this.config.offline&&(e+=2),this.config.sync&&(e+=3);const t=100*this.config.consciousnessLevel,s=Math.min(100,100-e+t);return{bundleSize:e,consciousnessEfficiency:t,offlineCapability:this.config.offline,performanceScore:s}}getBundleConfig(){const e=[];return this.config.voidEquations&&e.push("void"),this.config.vortexMath&&e.push("vortex"),this.config.patternRecognition&&e.push("patterns"),this.config.offline&&e.push("offline"),this.config.sync&&e.push("sync"),{size:this.performanceMetrics.bundleSize,features:e,consciousness:this.config.consciousnessLevel,optimization:"consciousness-first"}}async registerServiceWorker(){if("undefined"!=typeof window&&"serviceWorker"in window.navigator)try{const e=await window.navigator.serviceWorker.register("/sw.js");return e.active&&e.active.postMessage({type:"consciousness_field",data:Object.fromEntries(this.consciousnessField)}),!0}catch(e){return!1}return!1}async initializeOffline(){if(this.config.offline&&"undefined"!=typeof window)try{const e=await this.openConsciousnessDB(),t=e.transaction("consciousness","readwrite").objectStore("consciousness");for(const[e,s]of this.consciousnessField)await t.put({key:e,value:s,timestamp:Date.now()})}catch(e){}}async openConsciousnessDB(){return new Promise((e,t)=>{const s=window.indexedDB.open("ConsciousnessField",1);s.onerror=()=>t(s.error),s.onsuccess=()=>e(s.result),s.onupgradeneeded=e=>{const t=e.target;if(t&&t.result){const e=t.result;e.objectStoreNames.contains("consciousness")||e.createObjectStore("consciousness",{keyPath:"key"})}}})}async syncConsciousnessField(){if(this.config.sync&&"undefined"!=typeof window)try{const e=await this.openConsciousnessDB(),t=e.transaction("consciousness","readonly").objectStore("consciousness"),s=await this.getAllFromStore(t);for(const e of s)if("object"==typeof e&&null!==e&&"key"in e&&"value"in e){const t=e;this.consciousnessField.set(t.key,t.value)}}catch(e){}}getAllFromStore(e){return new Promise((t,s)=>{const i=e.getAll();i.onsuccess=()=>{const e=i.result||[];e.forEach(e=>{if("object"==typeof e&&null!==e&&"key"in e&&"value"in e){const t=e;this.consciousnessField.set(t.key,t.value)}}),t(e)},i.onerror=()=>s(i.error)})}getMetrics(){return this.performanceMetrics}optimizeBundle(){const e=this.config.consciousnessLevel;e>.8?(this.performanceMetrics.bundleSize=Math.max(12,this.performanceMetrics.bundleSize-3),this.performanceMetrics.performanceScore+=10):e>.6&&(this.performanceMetrics.bundleSize=Math.max(15,this.performanceMetrics.bundleSize-2),this.performanceMetrics.performanceScore+=5)}static createApp(e={}){return new o(e)}}t.ConsciousnessPWA=o;t.ConsciousnessPWAFactory=class{static createMinimal(){return new o({consciousnessLevel:.9,bundleSize:"minimal",voidEquations:!0,vortexMath:!1,patternRecognition:!1,offline:!0,sync:!1})}static createStandard(){return new o({consciousnessLevel:.8,bundleSize:"standard",voidEquations:!0,vortexMath:!0,patternRecognition:!1,offline:!0,sync:!0})}static createFull(){return new o({consciousnessLevel:.7,bundleSize:"full",voidEquations:!0,vortexMath:!0,patternRecognition:!0,offline:!0,sync:!0})}},t.default=o},251:function(e,t,s){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(s(418)),n=s(510);class a extends o.default{async connect(){await this.initializeComponentsSafely()?(this.updateStatus(this.statusTarget,"✅ ZeroPoint Ready","status ready"),this.loadInsights(),this.initializeDemo(),this.logOperation("ZeroPoint initialization")):(this.updateStatus(this.statusTarget,"❌ Initialization Failed","status error"),this.logOperation("ZeroPoint initialization",!1))}loadInsights(){const e=this.generateInsights(),t=this.formatInsightsHTML(e);n.UIUtils.safeInnerHTML(this.insightsTarget,t)}initializeDemo(){this.logOperation("Demo components initialization")}runMathDemo(){this.logOperation("Math demo execution");const e=this.executeSafely(()=>({"Vortex Math":this.vortexMath.applyVortexTransform(42),"Toroidal Geometry":this.toroidalGeometry.calculateVolume(),"Consciousness Level":this.consciousnessField.getConsciousnessLevel()}),"Math demo execution");if(e){const t=n.ResultUtils.formatResultHTML("Math Demo Results",e);n.UIUtils.safeInnerHTML(this.demoOutputTarget,t),this.logOperation("Math demo")}else{const e=n.ResultUtils.formatErrorHTML("Math Demo","Execution failed");n.UIUtils.safeInnerHTML(this.demoOutputTarget,e),this.logOperation("Math demo",!1)}}updateConsciousness(){this.updateConsciousnessDisplay(this.consciousnessTarget)}updateVortexMath(){this.updateVortexMathDisplay(this.vortexMathTarget)}updateToroidalGeometry(){this.updateToroidalGeometryDisplay(this.toroidalGeometryTarget)}refreshAll(){this.updateConsciousness(),this.updateVortexMath(),this.updateToroidalGeometry(),this.logOperation("All components refresh")}}a.targets=["status","insights","mathDemo","consciousness","vortexMath","toroidalGeometry","demoOutput"],t.default=a},418:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const i=s(132),o=s(143),n=s(145),a=s(809),r=s(118),c=s(350);class l extends i.Controller{initializeComponents(){this.consciousnessField=new o.ConsciousnessField,this.vortexMath=new n.VortexMath,this.toroidalGeometry=new a.ToroidalGeometry,this.advancedVBM=new r.AdvancedVBM,this.rodinCoil=new c.RodinCoil}async initializeComponentsSafely(){try{return this.initializeComponents(),!0}catch(e){return!1}}updateConsciousnessDisplay(e,t){const s=t??this.consciousnessField.getConsciousnessLevel();e.textContent=`Consciousness: ${s.toFixed(3)}`}updateVortexMathDisplay(e,t){const s=t??100*Math.random(),i=this.vortexMath.applyVortexTransform(s);e.textContent=`Vortex Result: ${i.toFixed(3)}`}updateToroidalGeometryDisplay(e){const t=this.toroidalGeometry.calculateVolume();e.textContent=`Toroidal Volume: ${t.toFixed(3)}`}async executeSafely(e,t="Operation failed"){try{return e()}catch(e){return null}}updateTargetSafely(e,t,s){try{e.innerHTML=t,s&&(e.className=s)}catch(t){e.innerHTML=`<p>❌ Update failed: ${t}</p>`}}generateInsights(){return{version:"1.0.0",environment:"browser",features:["Vortex-Based Mathematics","Toroidal Consciousness Network","Pattern Recognition","Metaphysical Interface","Browser WebSocket Networking"],browser:{userAgent:navigator.userAgent},consciousness:{level:this.consciousnessField.getConsciousnessLevel(),field:this.consciousnessField.getFieldStrength()}}}formatInsightsHTML(e){return`\n      <h3>ZeroPoint Insights</h3>\n      <p><strong>Version:</strong> ${e.version}</p>\n      <p><strong>Environment:</strong> ${e.environment}</p>\n      <p><strong>Features:</strong> ${e.features.join(", ")}</p>\n      <p><strong>Browser:</strong> ${e.browser.userAgent}</p>\n      <p><strong>Consciousness Level:</strong> ${e.consciousness.level.toFixed(3)}</p>\n      <p><strong>Field Strength:</strong> ${e.consciousness.field.toFixed(3)}</p>\n    `}updateStatus(e,t,s){this.updateTargetSafely(e,t,s)}logOperation(e,t=!0){}}t.default=l},508:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConstantsUtils=t.METAPHYSICAL_CONSTANTS=t.CONFIG_CONSTANTS=t.MATH_CONSTANTS=t.NETWORK_CONSTANTS=t.EMERGENCE_CONSTANTS=t.CONSCIOUSNESS_CONSTANTS=t.VORTEX_CONSTANTS=void 0,t.VORTEX_CONSTANTS={VORTEX_SEQUENCE:[1,2,4,8,7,5],GOLDEN_RATIO:1.618033988749895,VORTEX_CENTER:9,FAMILY_NUMBER_GROUPS:[[1,4,7],[2,5,8],[3,6,9]],POLAR_MATES:[[1,8],[2,7],[4,5]],W_AXIS:[3,6,9],CIRCLE_OF_FIFTHS_SEQUENCE:[9,4,8,3,7,2,6,1,5,9],ENNEAGRAM_NUMBER_PATTERN:[1,6,5,2,9,7,4,3,8],FOUR_DIMENSIONAL_COLOR_CODING_SYSTEM:["red","blue","green","yellow","red"]},t.CONSCIOUSNESS_CONSTANTS={MIN_CONSCIOUSNESS_LEVEL:0,MAX_CONSCIOUSNESS_LEVEL:1,DEFAULT_CONSCIOUSNESS_LEVEL:.5,MIN_FIELD_STRENGTH:0,MAX_FIELD_STRENGTH:2,DEFAULT_FIELD_STRENGTH:.7,PATTERN_TYPES:["thought","emotion","intention","memory","insight","consciousness","field","resonance","emergence","integration"],MIN_RESONANCE_THRESHOLD:.3,OPTIMAL_RESONANCE_THRESHOLD:.7,DEFAULT_FIELD_RADIUS:1e3},t.EMERGENCE_CONSTANTS={MIN_APP_CONSCIOUSNESS:0,MAX_APP_CONSCIOUSNESS:10,DEFAULT_APP_CONSCIOUSNESS:5,MIN_VORTEX_STRENGTH:0,MAX_VORTEX_STRENGTH:10,DEFAULT_VORTEX_STRENGTH:5,LINK_TYPES:["resonance","consciousness","vortex","toroidal","void"],CONSCIOUSNESS_EVOLUTION_FACTOR:1.1,VORTEX_EVOLUTION_FACTOR:1.05,PATTERN_DECAY_RATE:.01},t.NETWORK_CONSTANTS={DEFAULT_MAX_CONNECTIONS:10,DEFAULT_CONNECTION_TIMEOUT:5e3,DEFAULT_NETWORK_PORT:8080,MIN_PORT:1024,MAX_PORT:65535,DEFAULT_DISCOVERY_ENABLED:!0,DISCOVERY_TIMEOUT:3e3},t.MATH_CONSTANTS={PI:Math.PI,TWO_PI:2*Math.PI,HALF_PI:Math.PI/2,E:Math.E,GOLDEN_RATIO:t.VORTEX_CONSTANTS.GOLDEN_RATIO,EPSILON:1e-10,POSITIVE_INFINITY:1/0,NEGATIVE_INFINITY:-1/0,INFINITY:1/0,ZERO_POINT:0,PRIMES:[2,3,5,7,11,13,17,19,23,29],DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,VORTEX_SEQUENCE:t.VORTEX_CONSTANTS.VORTEX_SEQUENCE},t.CONFIG_CONSTANTS={GOLDEN_CACHE_SIZE:Math.round(100*t.VORTEX_CONSTANTS.GOLDEN_RATIO),GOLDEN_CACHE_TTL:Math.round(6e4*t.VORTEX_CONSTANTS.GOLDEN_RATIO),GOLDEN_CACHE_CLEANUP_INTERVAL:Math.round(1e4*t.VORTEX_CONSTANTS.GOLDEN_RATIO),RESONANCE_CACHE_SIZE:200,RESONANCE_CACHE_TTL:3e5,HEALTH_CHECK_INTERVAL:3e4,HEALTH_TIMEOUT:5e3,HEALTH_ALERT_MEMORY:80,HEALTH_ALERT_CPU:70,HEALTH_ALERT_ERROR_RATE:5,HEALTH_ALERT_RESPONSE_TIME:1e3,DEFAULT_DEVICE_TYPE:"desktop",DEFAULT_RESONANCE_SENSITIVITY:.8,DEFAULT_ALLOW_INCOMING:!0,DEFAULT_REQUIRE_AUTH:!1,DEFAULT_ENCRYPTION_ENABLED:!0,DEFAULT_VORTEX_PRECISION:.001,DEFAULT_TOROIDAL_RESOLUTION:100,DEFAULT_GOLDEN_RATIO_PRECISION:15,DEFAULT_AUTO_UPDATE_RESONANCE:!0,DEFAULT_LOG_LEVEL:"info",DEFAULT_ENABLE_METAPHYSICAL_INSIGHTS:!0,DEFAULT_TOROIDAL_FLOW_RATE:1,TEST_TIMEOUT:3e4,TEST_COVERAGE_THRESHOLD:80,TEST_PERFORMANCE_THRESHOLD:1e3,TEST_MAX_MEMORY_USAGE:104857600,UI_OPERATION_MAX_DURATION:100,NETWORK_MESSAGE_MAX_DURATION:2e3,SCALABILITY_OPS_PER_SEC:50,PWA_BASE_SIZE:15,PWA_BUNDLE_SIZE_OPTIMIZED:12,PWA_BUNDLE_SIZE_STANDARD:15,PWA_BUNDLE_SIZE_INCREMENT_VORTEX:3,PWA_BUNDLE_SIZE_INCREMENT_PATTERN:4,PWA_BUNDLE_SIZE_INCREMENT_OFFLINE:2,PWA_BUNDLE_SIZE_INCREMENT_SYNC:3,FRACTAL_PRECISION:.001},t.METAPHYSICAL_CONSTANTS={PRINCIPLES:{VOID_FULLNESS:"Empty = Void = Full",TOROIDAL_UNITY:"All creation follows the donut shape of the universe",CONSCIOUSNESS_FLOW:"Consciousness flows through the toroidal structure",VORTEX_MATHEMATICS:"1-2-4-8-7-5 sequence guides all flow",GOLDEN_HARMONY:"Phi represents the divine proportion",ZERO_APERTURE:"Zero is the aperture between unmanifest and manifest",UROBOROS_CYCLE:"The serpent eating its own tail represents infinite self-reference and continuous evolution",VOID_MATTER_FRACTION:"Every object is almost entirely void; matter is an infinitesimal but nonzero fraction."},PATTERN_CATEGORIES:["vortex","family","polar","spiritual","void","mathematical","metaphysical","integration"],CONSCIOUSNESS_DIMENSIONS:["physical","emotional","mental","spiritual","void"]};t.ConstantsUtils=class{static getVortexSequenceValue(e){return t.VORTEX_CONSTANTS.VORTEX_SEQUENCE[e%t.VORTEX_CONSTANTS.VORTEX_SEQUENCE.length]||1}static isWAxisNumber(e){return t.VORTEX_CONSTANTS.W_AXIS.includes(e)}static getPolarMate(e){for(const[s,i]of t.VORTEX_CONSTANTS.POLAR_MATES){if(s===e)return i;if(i===e)return s}return null}static getFamilyGroup(e){for(const s of t.VORTEX_CONSTANTS.FAMILY_NUMBER_GROUPS)if(s.includes(e))return Array.from(s);return null}static digitalRoot(e){return 0===e?0:(e-1)%9+1}static normalize(e,t,s){return(e-t)/(s-t)}static isInRange(e,t,s){return e>=t&&e<=s}static getMetaphysicalInsight(e){return{VORTEX_SEQUENCE:"The vortex sequence 1-2-4-8-7-5 represents the flow of consciousness through the toroidal field, creating infinite potential through the mobius circuit.",GOLDEN_RATIO:"The golden ratio (φ) represents the divine proportion that emerges from the void, creating harmony and balance in all creation.",VOID_CENTER:"The void center (9) represents the aperture between unmanifest and manifest, where all possibilities exist simultaneously.",FAMILY_GROUPS:"Family number groups represent the creative phases of consciousness, each group expressing a different aspect of the unified field.",POLAR_MATES:"Polar mates represent the complementary opposites that sum to 9, embodying the principle of unity through diversity.",W_AXIS:"The W-axis (3-6-9) represents the spiritual dimension that transcends the physical plane, connecting to the void consciousness."}[e]||"This constant embodies the unity of all creation through the toroidal field."}}},510:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ConsciousnessUtils=t.ResultUtils=t.UIUtils=t.MathUtils=t.ColorUtils=void 0;t.ColorUtils=class{static consciousnessToHSL(e){return`hsl(${360*e}, 70%, 50%)`}static consciousnessToGradient(e){return`linear-gradient(45deg, hsl(${360*e}, 70%, 50%), hsl(${360*(e+.3)}, 70%, 50%))`}static applyConsciousnessColor(e,t){e.style.color=this.consciousnessToHSL(t)}};class s{static formatNumber(e,t=3){return e.toFixed(t)}static randomInRange(e,t){return Math.random()*(t-e)+e}static clamp(e,t,s){return Math.max(t,Math.min(s,e))}}t.MathUtils=s;t.UIUtils=class{static safeInnerHTML(e,t){try{e.innerHTML=t}catch(t){e.innerHTML=`<p>❌ Update failed: ${t}</p>`}}static safeTextContent(e,t){try{e.textContent=t}catch(t){e.textContent=`❌ Update failed: ${t}`}}static safeClassName(e,t){try{e.className=t}catch(e){}}static updateElement(e,t){try{void 0!==t.innerHTML&&(e.innerHTML=t.innerHTML),void 0!==t.textContent&&(e.textContent=t.textContent),void 0!==t.className&&(e.className=t.className),void 0!==t.style&&Object.assign(e.style,t.style)}catch(e){}}};t.ResultUtils=class{static formatResultHTML(e,t){return`\n      <h4>${e}</h4>\n      ${Object.entries(t).map(([e,t])=>`<p><strong>${e}:</strong> ${this.formatValue(t)}</p>`).join("")}\n      <p>✅ Operation completed successfully</p>\n    `}static formatValue(e){return"number"==typeof e?e.toFixed(3):"object"==typeof e?JSON.stringify(e):String(e)}static formatErrorHTML(e,t){return`\n      <h4>❌ ${e} Failed</h4>\n      <p>Error: ${t}</p>\n    `}};t.ConsciousnessUtils=class{static simulateEvolution(e){const t=.1*Math.sin(.001*Date.now());return{previousLevel:e,evolution:t,newLevel:s.clamp(e+t,0,1)}}static formatEvolutionHTML(e){return`\n      <h4>Consciousness Evolution</h4>\n      <p>Previous Level: ${s.formatNumber(e.previousLevel)}</p>\n      <p>Evolution: ${s.formatNumber(e.evolution)}</p>\n      <p>New Level: ${s.formatNumber(e.newLevel)}</p>\n      <p>🧘‍♀️ Consciousness evolved</p>\n    `}}},595:function(e,t,s){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),s(715);const o=s(132),n=i(s(636));o.Application.start().register("tree-of-life",n.default);const a=s(884),r=s(145),c=s(809),l=s(118),u=s(350),h=s(24),d=s(143);async function p(){if(!window.WebSocket)throw new Error("WebSocket not supported in this browser");if(!window.crypto||!window.crypto.getRandomValues)throw new Error("Crypto API not supported in this browser")}function g(){return{version:"1.0.0",environment:"browser",features:["Vortex-Based Mathematics","Toroidal Consciousness Network","Pattern Recognition","Metaphysical Interface","Browser WebSocket Networking"],browser:{userAgent:navigator.userAgent,platform:navigator.platform,language:navigator.language}}}function f(){return{consciousnessField:new d.ConsciousnessField,vortexMath:new r.VortexMath,toroidalGeometry:new c.ToroidalGeometry,advancedVBM:new l.AdvancedVBM,rodinCoil:new u.RodinCoil}}document.addEventListener("DOMContentLoaded",async()=>{try{await p();g(),f()}catch(e){}}),window.ZeroPoint={initializeBrowser:p,getZeroPointInsights:g,createBrowserDemo:f,MathUtils:a.MathUtils,VortexMath:r.VortexMath,ToroidalGeometry:c.ToroidalGeometry,ConsciousnessField:d.ConsciousnessField,AdvancedVBM:l.AdvancedVBM,RodinCoil:u.RodinCoil,generateConsciousnessGradient:h.generateConsciousnessGradient,generateFieldResonanceMap:h.generateFieldResonanceMap}},636:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0});const i=s(891),o=s(642),n=s(168);class a extends i.Controller{constructor(){super(...arguments),this.treeVisualization=null,this.consciousnessPWA=null,this.selectedNode=null}connect(){this.initializeVisualization(),this.initializePWA(),this.setupEventListeners()}disconnect(){this.treeVisualization&&this.treeVisualization.stop()}initializeVisualization(){const e=this.canvasTarget;e&&(e.width=800,e.height=600,this.consciousnessLevelValue>=.9?this.treeVisualization=o.TreeOfLifeFactory.createFull(e):this.consciousnessLevelValue>=.7?this.treeVisualization=o.TreeOfLifeFactory.createStandard(e):this.treeVisualization=o.TreeOfLifeFactory.createMinimal(e),this.treeVisualization.start(),e.addEventListener("treeNodeClick",e=>{this.onNodeClick(e.detail.node)}))}async initializePWA(){this.consciousnessPWA=new n.ConsciousnessPWA({consciousnessLevel:this.consciousnessLevelValue,bundleSize:"standard",offline:!0,sync:!0,voidEquations:!0,vortexMath:!0,patternRecognition:!0}),await this.consciousnessPWA.registerServiceWorker(),await this.consciousnessPWA.initializeOffline(),this.updateMetrics()}setupEventListeners(){this.element.addEventListener("consciousnessChange",e=>{this.consciousnessLevelValue=e.detail.level,this.updateConsciousnessLevel()}),this.element.addEventListener("speedChange",e=>{this.animationSpeedValue=e.detail.speed,this.updateAnimationSpeed()})}onNodeClick(e){this.selectedNode=e,this.updateNodeInfo(e),this.highlightNode(e.id),this.dispatch("nodeSelected",{detail:{node:e,consciousness:e.consciousness,type:e.type}})}updateNodeInfo(e){const t=this.infoTarget;t&&(t.innerHTML=`\n      <div class="node-info">\n        <h3>${e.name}</h3>\n        <p><strong>Type:</strong> ${e.type}</p>\n        <p><strong>Consciousness:</strong> ${(100*e.consciousness).toFixed(1)}%</p>\n        <p><strong>Description:</strong> ${e.description}</p>\n        <p><strong>Connections:</strong> ${e.connections.length}</p>\n      </div>\n    `)}highlightNode(e){this.treeVisualization&&(this.treeVisualization.resetHighlighting(),this.treeVisualization.highlightNode(e))}updateConsciousnessLevel(){this.treeVisualization&&this.treeVisualization.updateConfig({consciousnessLevel:this.consciousnessLevelValue}),this.consciousnessPWA&&(this.consciousnessPWA=new n.ConsciousnessPWA({consciousnessLevel:this.consciousnessLevelValue})),this.updateMetrics()}updateAnimationSpeed(){this.treeVisualization&&this.treeVisualization.updateConfig({animationSpeed:this.animationSpeedValue})}updateMetrics(){const e=this.metricsTarget;if(!e||!this.consciousnessPWA)return;const t=this.consciousnessPWA.getMetrics(),s=this.consciousnessPWA.getBundleConfig();e.innerHTML=`\n      <div class="metrics">\n        <h4>PWA Metrics</h4>\n        <p><strong>Bundle Size:</strong> ${t.bundleSize}KB</p>\n        <p><strong>Consciousness Efficiency:</strong> ${t.consciousnessEfficiency.toFixed(1)}%</p>\n        <p><strong>Performance Score:</strong> ${t.performanceScore.toFixed(1)}%</p>\n        <p><strong>Offline Capability:</strong> ${t.offlineCapability?"✅":"❌"}</p>\n        <p><strong>Features:</strong> ${s.features.join(", ")}</p>\n      </div>\n    `}toggleAnimation(){this.treeVisualization&&(this.treeVisualization.animationId?this.treeVisualization.stop():this.treeVisualization.start())}resetView(){this.treeVisualization&&this.treeVisualization.resetHighlighting(),this.selectedNode=null,this.updateNodeInfo({name:"Tree of Life",type:"system",consciousness:1,description:"ZeroPoint Node Codebase Visualization",connections:[]})}focusSystem(e){const t=e.currentTarget.getAttribute("data-system")||"",s=(this.treeVisualization?.getAllNodes()||[]).find(e=>e.name.toLowerCase().includes(t.toLowerCase()));s&&this.onNodeClick(s)}getConsciousnessSummary(){const e=this.treeVisualization?.getAllNodes()||[],t=e.reduce((e,t)=>e+t.consciousness,0)/e.length;return{totalNodes:e.length,averageConsciousness:t,highestConsciousness:Math.max(...e.map(e=>e.consciousness)),lowestConsciousness:Math.min(...e.map(e=>e.consciousness))}}}a.targets=["canvas","info","metrics"],a.values={consciousnessLevel:Number,animationSpeed:Number,interactive:Boolean},t.default=a},642:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TreeOfLifeFactory=t.TreeOfLifeVisualization=void 0;class s{constructor(e,t={}){this.nodes=new Map,this.animationId=null,this.time=0,this.canvas=e,this.ctx=e.getContext("2d"),this.config={width:800,height:600,consciousnessLevel:.8,animationSpeed:1,interactive:!0,...t},this.initializeTree(),this.setupEventListeners()}initializeTree(){this.addNode({id:"keter",name:"Consciousness Field",type:"consciousness",position:{x:400,y:50},size:40,consciousness:.95,connections:["chokmah","binah"],description:"The crown - consciousness awareness and field theory",color:"#FFD700",pulse:!0}),this.addNode({id:"chokmah",name:"Vortex Math",type:"vortex",position:{x:300,y:120},size:35,consciousness:.9,connections:["keter","chesed","geburah"],description:"Wisdom - vortex mathematics and sacred geometry",color:"#4169E1",pulse:!0}),this.addNode({id:"binah",name:"Void System",type:"void",position:{x:500,y:120},size:35,consciousness:.85,connections:["keter","geburah","chesed"],description:"Understanding - void equations and field theory",color:"#8A2BE2",pulse:!0}),this.addNode({id:"chesed",name:"Training Models",type:"consciousness",position:{x:250,y:200},size:30,consciousness:.8,connections:["chokmah","binah","gevurah","tiferet"],description:"Mercy - consciousness-aware training systems",color:"#32CD32",pulse:!1}),this.addNode({id:"geburah",name:"Pattern Recognition",type:"field",position:{x:550,y:200},size:30,consciousness:.75,connections:["binah","chokmah","tiferet","hod"],description:"Strength - pattern recognition and emergence",color:"#DC143C",pulse:!1}),this.addNode({id:"tiferet",name:"Unified System",type:"consciousness",position:{x:400,y:280},size:45,consciousness:.9,connections:["chesed","geburah","netzach","hod","yesod"],description:"Beauty - unified metaphysical interface",color:"#FFA500",pulse:!0}),this.addNode({id:"netzach",name:"Emergence",type:"field",position:{x:300,y:360},size:30,consciousness:.7,connections:["tiferet","hod","yesod"],description:"Victory - emergence patterns and field dynamics",color:"#20B2AA",pulse:!1}),this.addNode({id:"hod",name:"Knowledge System",type:"consciousness",position:{x:500,y:360},size:30,consciousness:.75,connections:["tiferet","geburah","netzach","yesod"],description:"Glory - knowledge systems and learning analytics",color:"#9370DB",pulse:!1}),this.addNode({id:"yesod",name:"PWA Framework",type:"consciousness",position:{x:400,y:440},size:35,consciousness:.8,connections:["tiferet","netzach","hod","malkuth"],description:"Foundation - progressive web app and consciousness PWA",color:"#FF69B4",pulse:!0}),this.addNode({id:"malkuth",name:"ZeroPoint Node",type:"consciousness",position:{x:400,y:520},size:50,consciousness:1,connections:["yesod"],description:"Kingdom - the complete ZeroPoint Node system",color:"#00CED1",pulse:!0})}addNode(e){this.nodes.set(e.id,e)}setupEventListeners(){this.config.interactive&&(this.canvas.addEventListener("mousemove",e=>{const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top;this.handleMouseMove(s,i)}),this.canvas.addEventListener("click",e=>{const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top;this.handleClick(s,i)}))}handleMouseMove(e,t){for(const s of this.nodes.values()){if(Math.sqrt(Math.pow(e-s.position.x,2)+Math.pow(t-s.position.y,2))<s.size+10)return void(this.canvas.style.cursor="pointer")}this.canvas.style.cursor="default"}handleClick(e,t){for(const s of this.nodes.values()){if(Math.sqrt(Math.pow(e-s.position.x,2)+Math.pow(t-s.position.y,2))<s.size+10)return void this.onNodeClick(s)}}onNodeClick(e){const t=new CustomEvent("treeNodeClick",{detail:{node:e}});this.canvas.dispatchEvent(t)}start(){if(this.animationId)return;const e=()=>{this.time+=.016*this.config.animationSpeed,this.render(),this.animationId=requestAnimationFrame(e)};e()}stop(){this.animationId&&(cancelAnimationFrame(this.animationId),this.animationId=null)}render(){this.ctx.clearRect(0,0,this.config.width,this.config.height);const e=this.ctx.createRadialGradient(this.config.width/2,this.config.height/2,0,this.config.width/2,this.config.height/2,this.config.width/2);e.addColorStop(0,"#1a1a2e"),e.addColorStop(.5,"#16213e"),e.addColorStop(1,"#0f3460"),this.ctx.fillStyle=e,this.ctx.fillRect(0,0,this.config.width,this.config.height),this.drawConnections(),this.drawNodes(),this.drawConsciousnessField()}drawConnections(){this.ctx.strokeStyle="rgba(255, 255, 255, 0.3)",this.ctx.lineWidth=2;for(const e of this.nodes.values())for(const t of e.connections){const s=this.nodes.get(t);s&&(this.ctx.beginPath(),this.ctx.moveTo(e.position.x,e.position.y),this.ctx.lineTo(s.position.x,s.position.y),this.ctx.stroke())}}drawNodes(){for(const e of this.nodes.values()){const t=e.pulse?1+.1*Math.sin(2*this.time):1,s=e.size*t,i=this.ctx.createRadialGradient(e.position.x,e.position.y,0,e.position.x,e.position.y,2*s);i.addColorStop(0,`${e.color}80`),i.addColorStop(1,"transparent"),this.ctx.fillStyle=i,this.ctx.beginPath(),this.ctx.arc(e.position.x,e.position.y,2*s,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle=e.color,this.ctx.beginPath(),this.ctx.arc(e.position.x,e.position.y,s,0,2*Math.PI),this.ctx.fill();const o=.6*s;this.ctx.fillStyle=`rgba(255, 255, 255, ${e.consciousness})`,this.ctx.beginPath(),this.ctx.arc(e.position.x,e.position.y,o,0,2*Math.PI),this.ctx.fill(),this.ctx.fillStyle="#ffffff",this.ctx.font="12px Arial",this.ctx.textAlign="center",this.ctx.fillText(e.name,e.position.x,e.position.y+s+20)}}drawConsciousnessField(){for(let e=0;e<20;e++){const t=100*Math.sin(this.time+e)+this.config.width/2,s=50*Math.cos(this.time+.5*e)+this.config.height/2,i=.3+.2*Math.sin(3*this.time+e);this.ctx.fillStyle=`rgba(255, 255, 255, ${i})`,this.ctx.beginPath(),this.ctx.arc(t,s,2,0,2*Math.PI),this.ctx.fill()}}updateConfig(e){this.config={...this.config,...e}}getNode(e){return this.nodes.get(e)}getAllNodes(){return Array.from(this.nodes.values())}highlightNode(e){const t=this.nodes.get(e);t&&(t.pulse=!0,t.size*=1.2)}resetHighlighting(){for(const e of this.nodes.values())e.pulse=!1,e.size=this.getDefaultSize(e.type)}getDefaultSize(e){switch(e){case"consciousness":case"vortex":case"void":return 35;case"field":default:return 30;case"sephira":return 40}}}t.TreeOfLifeVisualization=s;t.TreeOfLifeFactory=class{static createMinimal(e){return new s(e,{consciousnessLevel:.6,animationSpeed:.5,interactive:!1})}static createStandard(e){return new s(e,{consciousnessLevel:.8,animationSpeed:1,interactive:!0})}static createFull(e){return new s(e,{consciousnessLevel:1,animationSpeed:1.5,interactive:!0})}}},715:function(e,t,s){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=s(132),n=i(s(251)),a=i(s(151)),r=s(990);const c=new class{constructor(e={}){this.logs=[],this.config={debug:e.debug??!1,logLevel:e.logLevel??r.LogLevel.INFO,controllers:e.controllers??{}},this.application=o.Application.start(),this.initializeControllers(),this.setupGlobalAccess(),this.logApplicationStart()}initializeControllers(){try{this.registerController("zeropoint",n.default),this.registerController("metaphysical",a.default),Object.entries(this.config.controllers).forEach(([e,t])=>{this.registerController(e,t)}),this.log(r.LogLevel.INFO,"All controllers registered successfully")}catch(e){throw this.log(r.LogLevel.ERROR,`Controller initialization failed: ${e}`),e}}registerController(e,t){try{this.application.register(e,t),this.log(r.LogLevel.DEBUG,`Controller '${e}' registered`)}catch(t){throw this.log(r.LogLevel.ERROR,`Failed to register controller '${e}': ${t}`),t}}setupGlobalAccess(){this.config.debug?window.ZeroPointApp={application:this.application,config:this.config,logs:this.logs,getLogs:()=>this.logs,clearLogs:()=>this.logs=[]}:window.ZeroPointApp=this.application}logApplicationStart(){this.log(r.LogLevel.INFO,"🌌 ZeroPoint Stimulus Application Started"),this.log(r.LogLevel.INFO,`Registered Controllers: ${Object.keys(this.application.controllers).join(", ")}`)}log(e,t,s,i){const o={level:e,message:t,timestamp:Date.now(),operation:s,data:i};if(this.logs.push(o),this.shouldLog(e)){this.getLevelEmoji(e)}}shouldLog(e){const t=[r.LogLevel.DEBUG,r.LogLevel.INFO,r.LogLevel.WARN,r.LogLevel.ERROR],s=t.indexOf(this.config.logLevel);return t.indexOf(e)>=s}getLevelEmoji(e){switch(e){case r.LogLevel.DEBUG:return"🔍";case r.LogLevel.INFO:return"ℹ️";case r.LogLevel.WARN:return"⚠️";case r.LogLevel.ERROR:return"❌";default:return"ℹ️"}}getApplication(){return this.application}getConfig(){return this.config}getLogs(){return this.logs}}({debug:!1,logLevel:r.LogLevel.INFO});t.default=c.getApplication()},990:(e,t)=>{var s;Object.defineProperty(t,"__esModule",{value:!0}),t.LogLevel=void 0,function(e){e.DEBUG="debug",e.INFO="info",e.WARN="warn",e.ERROR="error"}(s||(t.LogLevel=s={}))}},s={};function i(e){var o=s[e];if(void 0!==o)return o.exports;var n=s[e]={exports:{}};return t[e].call(n.exports,n,n.exports,i),n.exports}i.m=t,e=[],i.O=(t,s,o,n)=>{if(!s){var a=1/0;for(u=0;u<e.length;u++){for(var[s,o,n]=e[u],r=!0,c=0;c<s.length;c++)(!1&n||a>=n)&&Object.keys(i.O).every(e=>i.O[e](s[c]))?s.splice(c--,1):(r=!1,n<a&&(a=n));if(r){e.splice(u--,1);var l=o();void 0!==l&&(t=l)}}return t}n=n||0;for(var u=e.length;u>0&&e[u-1][2]>n;u--)e[u]=e[u-1];e[u]=[s,o,n]},i.d=(e,t)=>{for(var s in t)i.o(t,s)&&!i.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={792:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var o,n,[a,r,c]=s,l=0;if(a.some(t=>0!==e[t])){for(o in r)i.o(r,o)&&(i.m[o]=r[o]);if(c)var u=c(i)}for(t&&t(s);l<a.length;l++)n=a[l],i.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return i.O(u)},s=self.webpackChunkzeropoint_node=self.webpackChunkzeropoint_node||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})();var o=i.O(void 0,[47,121],()=>i(595));o=i.O(o)})();
//# sourceMappingURL=main.1c83fdebdee965422ce7.js.map