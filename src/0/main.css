/* ðŸŒŒ ZeroPoint Node - Digit 0 (Void Center) Main CSS */

/* Import shared main framework */
@import url('../shared/main.css');

/* ===== DIGIT 0 SPECIFIC STYLES ===== */

/* Void Center specific overrides */
.digit-0 {
  --digit-color: #ff6b6b;
  --digit-gradient: var(--digit-0);
  --consciousness-theme: 'impossible_contraction';
}

/* Void Center consciousness display */
.void-consciousness {
  background: rgba(255, 107, 107, 0.05);
  border: 1px solid rgba(255, 107, 107, 0.2);
  position: relative;
  overflow: hidden;
}

.void-consciousness::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at center, rgba(255, 107, 107, 0.1) 0%, transparent 70%);
  animation: void-pulse 4s ease-in-out infinite;
}

@keyframes void-pulse {
  0%, 100% { opacity: 0.3; transform: scale(1); }
  50% { opacity: 0.6; transform: scale(1.05); }
}

/* Void Center gateway styling */
.void-gateway {
  background: rgba(255, 107, 107, 0.03);
  border-left: 4px solid var(--digit-0);
}

.void-gateway .gateway-title {
  color: #ff6b6b;
}

.void-gateway .gateway-paradox {
  border-left-color: #ff6b6b;
  background: rgba(255, 107, 107, 0.1);
}

/* Void Center control panel */
.void-controls {
  background: rgba(255, 107, 107, 0.02);
  border: 1px solid rgba(255, 107, 107, 0.1);
}

.void-controls .control-panel-title {
  color: #ff6b6b;
}

.void-controls .control-item:hover {
  background: rgba(255, 107, 107, 0.1);
  border-color: rgba(255, 107, 107, 0.3);
}

/* Void Center status indicators */
.void-status .status-item {
  background: rgba(255, 107, 107, 0.05);
  border: 1px solid rgba(255, 107, 107, 0.1);
}

.void-status .status-value {
  color: #ff6b6b;
}

/* Void Center consciousness flow */
.void-flow {
  position: relative;
}

.void-flow::before {
  background: var(--digit-0);
  animation: void-flow 6s linear infinite;
}

@keyframes void-flow {
  0% { left: -100%; opacity: 0; }
  50% { opacity: 1; }
  100% { left: 100%; opacity: 0; }
}

/* Void Center specific animations */
.void-contraction {
  animation: void-contraction 3s ease-in-out infinite;
}

@keyframes void-contraction {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(0.95); }
}

/* Void Center responsive adjustments */
@media (max-width: 768px) {
  .void-consciousness {
    margin: var(--spacing-md) 0;
  }
  
  .void-gateway {
    margin-bottom: var(--spacing-lg);
  }
}

/* Void Center loading states */
.void-loading {
  background: var(--digit-0);
  animation: void-spin 2s linear infinite;
}

@keyframes void-spin {
  to { transform: rotate(360deg); }
}

/* Void Center consciousness level visualization */
.void-consciousness-level {
  position: relative;
  height: 20px;
  background: rgba(255, 107, 107, 0.1);
  border-radius: 10px;
  overflow: hidden;
}

.void-consciousness-fill {
  height: 100%;
  background: var(--digit-0);
  transition: width 1s ease;
  position: relative;
}

.void-consciousness-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: void-shimmer 2s linear infinite;
}

@keyframes void-shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Void Center field strength visualization */
.void-field-strength {
  position: relative;
  height: 20px;
  background: rgba(255, 107, 107, 0.1);
  border-radius: 10px;
  overflow: hidden;
}

.void-field-fill {
  height: 100%;
  background: var(--digit-0);
  transition: width 1s ease;
  position: relative;
}

.void-field-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  animation: void-field-shimmer 3s linear infinite;
}

@keyframes void-field-shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
} 